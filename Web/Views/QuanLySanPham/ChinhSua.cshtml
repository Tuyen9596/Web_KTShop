@model Web.Models.SanPham

@{
    ViewBag.Title = "ChinhSua";
    Layout = "~/Views/Layout/AdminLayout.cshtml";
}
@* b1;Chèn link javascript suwr dung datepicker*@
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="/Content/AdminLayout/CustomJs/ChinhSua.js"></script>
@* Chen js suw dung tiny bieen soan html multimedia *@
<script>
    tinymce.init({
        selector: 'textarea', //id,class muoon dinh dang
        height: 500,
        menubar: true,
        plugins: [
          'advlist autolink lists link image charmap print preview anchor textcolor',
          'searchreplace visualblocks code fullscreen',
          'insertdatetime media table contextmenu paste code help wordcount'
        ],
        toolbar: 'insert | undo redo |  formatselect | bold italic backcolor  | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help',
        content_css: [
          '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
          '//www.tinymce.com/css/codepen.min.css']
    });
</script>
<script src="~/Content/js/plugin/ckfinder/ckfinder.js"></script>
<script src="~/Content/js/plugin/ckeditor/ckeditor.js"></script>
@* Thêm hinh ảnh
    b1:thêm thuôc tính @enctype="multipart/form-data" vào form *@
@using (Html.BeginForm("ChinhSua", "QuanLysanPham", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.Hidden("MaSP", Model.MaSP)
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TenSP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.TenSP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenSP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DonGia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.DonGia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DonGia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NgayCapNhat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @if (Model.NgayCapNhat != null)
                {
                    @Html.TextBox("NgayCapNhat", Model.NgayCapNhat.Value.ToShortDateString(), new { id = "datepicker", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NgayCapNhat, "", new { @class = "text-danger" })
                }
                else
                {
                    <input type="text" id="datepicker" name="NgayCapNhat" class="form-control">}
            </div>
        </div>

        <div class="form-group">
           <label class="control-label col-md-2">Cấu Hình</label>
            <div class="col-md-10">
                @Html.TextArea("CauHinh",Model.CauHinh, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
           <label class="control-label col-md-2">Mô Tả</label>
            <div class="col-md-10">
                @Html.TextArea("MoTa",Model.MoTa, new {  @class = "form-control" } )
            </div>
        </div>
        @* Tạo 1 thẻ input voi type la file đe up hinh anh tu local len *@
        <div class="form-group ">
            <div style="float:left;padding-left:300px">
                <input type="button" value="Select Image 1" id="btnchonanh" />
                <br />
                @Html.TextBox("HinhAnh",Model.HinhAnh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })
            </div>
            <div style="float:right;padding-right:300px">
                <input type="file" name="HinhAnh" value="Select Image 2" id="btnchonanh2" />
                <br />
                @if (Model.Hinhanh2 != null)
                {
                    <img src="@Url.Content("~/Content/images/" + Model.Hinhanh2)" width="150" height="150" />
                }
            </div>
        </div>
        <div class="form-group">
            <div style="float:left;padding-left:300px">
                <input type="file" name="HinhAnh" value="Select Image 3" id="btnchonanh3" />
                <br />
                @if (Model.Hinhanh3 != null)
                {

                    <img src="@Url.Content("~/Content/images/" + Model.Hinhanh3)" width="150" height="150" />
                }
            </div>
            <div style="float:right;padding-right:300px">
                <input type="file" name="HinhAnh" value="Select Image 4" id="btnchonanh4" />
                <br />
                @if (Model.Hinhanh4 != null)
                {

                    <img src="@Url.Content("~/Content/images/" + Model.Hinhanh4)" width="150" height="150" />
                }
            </div>
        </div>
        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.SoLuongTon, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.SoLuongTon, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SoLuongTon, "", new { @class = "text-danger" })
                </div>
            </div>

            <div>
                @Html.LabelFor(model => model.LuotXem, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LuotXem, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LuotXem, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.LuotBinhChon, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LuotBinhChon, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LuotBinhChon, "", new { @class = "text-danger" })
                </div>
            </div>
            <div>
                @Html.LabelFor(model => model.LuotBinhLuan, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LuotBinhLuan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LuotBinhLuan, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.SoLanMua, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.SoLanMua, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SoLanMua, "", new { @class = "text-danger" })
                </div>
            </div>

            <div>
                @Html.LabelFor(model => model.Moi, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Moi, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Moi, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.MaNCC, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownList("MaNCC", null, new { @class = "form-control" })
                </div>
            </div>

            <div>
                @Html.LabelFor(model => model.MaNSX, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownList("MaNSX", null, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.MaLoaiSP, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownList("MaLoaiSP", null, new { @class = "form-control" })
                </div>
            </div>

            <div>
                @Html.LabelFor(model => model.DaXoa, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.DaXoa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DaXoa, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Lưu" class="btn btn-success" />
            </div>
        </div>
    </div>

}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
